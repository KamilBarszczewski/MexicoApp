// Generated by view binder compiler. Do not edit!
package com.example.mexicoapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mexicoapp.R;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDetailBinding implements ViewBinding {
  @NonNull
  private final SwipeRefreshLayout rootView;

  @NonNull
  public final FloatingActionButton addFab;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final MaterialButton btnTemp;

  @NonNull
  public final FloatingActionButton curiositiesFab;

  @NonNull
  public final TextView detailDescriptionTv;

  @NonNull
  public final ImageView detailIv;

  @NonNull
  public final TextView detailTitleTv;

  @NonNull
  public final FloatingActionButton historyFab;

  @NonNull
  public final ImageView imgWeather;

  @NonNull
  public final SwipeRefreshLayout refreshLayout;

  @NonNull
  public final RelativeLayout shadowLayout;

  @NonNull
  public final Toolbar toolbar;

  private FragmentDetailBinding(@NonNull SwipeRefreshLayout rootView,
      @NonNull FloatingActionButton addFab, @NonNull AppBarLayout appBarLayout,
      @NonNull MaterialButton btnTemp, @NonNull FloatingActionButton curiositiesFab,
      @NonNull TextView detailDescriptionTv, @NonNull ImageView detailIv,
      @NonNull TextView detailTitleTv, @NonNull FloatingActionButton historyFab,
      @NonNull ImageView imgWeather, @NonNull SwipeRefreshLayout refreshLayout,
      @NonNull RelativeLayout shadowLayout, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.addFab = addFab;
    this.appBarLayout = appBarLayout;
    this.btnTemp = btnTemp;
    this.curiositiesFab = curiositiesFab;
    this.detailDescriptionTv = detailDescriptionTv;
    this.detailIv = detailIv;
    this.detailTitleTv = detailTitleTv;
    this.historyFab = historyFab;
    this.imgWeather = imgWeather;
    this.refreshLayout = refreshLayout;
    this.shadowLayout = shadowLayout;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public SwipeRefreshLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_fab;
      FloatingActionButton addFab = ViewBindings.findChildViewById(rootView, id);
      if (addFab == null) {
        break missingId;
      }

      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.btn_temp;
      MaterialButton btnTemp = ViewBindings.findChildViewById(rootView, id);
      if (btnTemp == null) {
        break missingId;
      }

      id = R.id.curiosities_fab;
      FloatingActionButton curiositiesFab = ViewBindings.findChildViewById(rootView, id);
      if (curiositiesFab == null) {
        break missingId;
      }

      id = R.id.detail_description_tv;
      TextView detailDescriptionTv = ViewBindings.findChildViewById(rootView, id);
      if (detailDescriptionTv == null) {
        break missingId;
      }

      id = R.id.detail_iv;
      ImageView detailIv = ViewBindings.findChildViewById(rootView, id);
      if (detailIv == null) {
        break missingId;
      }

      id = R.id.detail_title_tv;
      TextView detailTitleTv = ViewBindings.findChildViewById(rootView, id);
      if (detailTitleTv == null) {
        break missingId;
      }

      id = R.id.history_fab;
      FloatingActionButton historyFab = ViewBindings.findChildViewById(rootView, id);
      if (historyFab == null) {
        break missingId;
      }

      id = R.id.img_weather;
      ImageView imgWeather = ViewBindings.findChildViewById(rootView, id);
      if (imgWeather == null) {
        break missingId;
      }

      SwipeRefreshLayout refreshLayout = (SwipeRefreshLayout) rootView;

      id = R.id.shadow_layout;
      RelativeLayout shadowLayout = ViewBindings.findChildViewById(rootView, id);
      if (shadowLayout == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new FragmentDetailBinding((SwipeRefreshLayout) rootView, addFab, appBarLayout, btnTemp,
          curiositiesFab, detailDescriptionTv, detailIv, detailTitleTv, historyFab, imgWeather,
          refreshLayout, shadowLayout, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
